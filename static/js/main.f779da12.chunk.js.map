{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/screens/Profile.Screen.js","components/PrivateRoute.js","components/screens/Home.Screen.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","changeUser","Provider","responseGoogle","response","console","log","LoginScreen","error","history","useHistory","login","res","a","profileObj","email","indexOf","alert","push","Card","style","backgroundColor","Body","className","color","Alert","variant","display","justifyContent","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","useStyles","makeStyles","theme","button","margin","spacing","ProfileScreen","FACING_MODE_USER","videoConstraints","facingMode","setFacingMode","handleClick","useCallback","prevState","classes","webcamRef","useRef","nameRef","phoneRef","instaRef","snapRef","descriptors","openCamera","setOpenCamera","setButtonText","averageDescriptor","setAverageDescriptor","doneRunning","setDoneRunning","startedRunning","setStartedRunning","name","setName","phone","setPhone","insta","setInsta","snap","setSnap","handleHome","saveData","current","database","ref","googleId","set","descriptor","handleLeaveCamera","runFaceapi","faceapi","length","detect","takeAverage","averages","i","average","sum","j","video","readyState","withFaceLandmarks","withFaceDescriptor","detectionWithDescriptors","clearInterval","interval","once","snapshot","exists","val","IconButton","onClick","marginLeft","marginRight","left","right","textAlign","zindex","width","height","Button","size","Form","startIcon","Group","id","Label","Control","defaultValue","placeholder","required","PrivateRoute","Component","component","rest","render","props","to","HomeScreen","FACING_MODE_ENVIRONMENT","prediction","setPrediction","predictionOut","setPredictionOut","phoneSMS","compareFaces","closest","on","distance","loadModels","onLogoutSuccess","border","paddingTop","href","App","Container","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f779da12.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCUqHmiQD8PkE0UDMsuHjAhrZ9QQNrydeg\",\r\n  authDomain: \"nametag-de54e.firebaseapp.com\",\r\n  projectId: \"nametag-de54e\",\r\n  storageBucket: \"nametag-de54e.appspot.com\",\r\n  messagingSenderId: \"686023333837\",\r\n  appId: \"1:686023333837:web:80907e123a1eb4f45e5684\",\r\n  measurementId: \"G-YYT9G3V3TS\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n\r\n  function changeUser(user) {\r\n    setCurrentUser(user)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  \r\n\r\n  const value = {\r\n    currentUser,\r\n    changeUser,\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport firebase from \"firebase\";\r\n\r\nconst responseGoogle = response => {\r\n  console.log(response);\r\n};\r\n\r\nexport default function LoginScreen() {\r\n  const { changeUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const { login } = useAuth()\r\n\r\n  async function handleLogin(res) {\r\n      await changeUser(res.profileObj)\r\n      let email = res.profileObj.email\r\n      var idxHarvard = email.indexOf('@college.harvard.edu');\r\n      if (idxHarvard == -1) {\r\n        alert(\"Please sign in using your Harvard College email address!\");\r\n        await changeUser(null)\r\n        email = null\r\n      }\r\n      else{\r\n        history.push(\"/\")\r\n      }\r\n      \r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Card style={{backgroundColor: '#A51C30'}}>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\" style={{color: 'white'}}>Nametag</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n              <GoogleLogin\r\n                clientId='686023333837-p65ka8pm804ual7o284tholp22pll81s.apps.googleusercontent.com'\r\n                buttonText=\"Log in with Google\"\r\n                onSuccess={handleLogin}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n\r\n            />\r\n            </div>\r\n\r\n        </Card.Body>\r\n      </Card>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Form, Card, Alert } from \"react-bootstrap\"\r\nimport Webcam from \"react-webcam\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Check from '@material-ui/icons/Check';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FlipCameraIos from '@material-ui/icons/FlipCameraIos';\r\n\r\nimport Error from '@material-ui/icons/Error';\r\n\r\nimport Home from '@material-ui/icons/Home';\r\nimport CameraAlt from '@material-ui/icons/CameraAlt';\r\nimport * as faceapi from 'face-api.js';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#A51C30\",\r\n\r\n  },\r\n}));\r\n\r\n\r\nfunction ProfileScreen() {\r\n  const FACING_MODE_USER = \"user\";\r\n  const FACING_MODE_ENVIRONMENT = \"environment\";\r\n\r\n  const videoConstraints = {\r\n    facingMode: FACING_MODE_USER\r\n  };\r\n\r\n  const [facingMode, setFacingMode] = React.useState(FACING_MODE_USER);\r\n\r\n  const handleClick = React.useCallback(() => {\r\n      setFacingMode(\r\n        prevState =>\r\n          prevState === FACING_MODE_USER\r\n            ? FACING_MODE_ENVIRONMENT\r\n            : FACING_MODE_USER\r\n      );\r\n    }, []);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const { currentUser } = useAuth()\r\n  const webcamRef = useRef(null);\r\n  const nameRef = useRef()\r\n  const phoneRef = useRef()\r\n  const instaRef = useRef()\r\n  const snapRef = useRef()\r\n\r\n  let descriptors = [];\r\n  let interval;\r\n  \r\n  const [openCamera, setOpenCamera] = useState(false);\r\n  const [buttonText, setButtonText] = useState(\"Run facial recognition\")\r\n  const [averageDescriptor, setAverageDescriptor] = useState(null)\r\n  const [doneRunning, setDoneRunning] = useState(false)\r\n  const [startedRunning, setStartedRunning] = useState(true)\r\n  const [name, setName] = useState(null)\r\n  const [phone, setPhone] = useState(null)\r\n  const [insta, setInsta] = useState(null)\r\n  const [snap, setSnap] = useState(null)\r\n  const NUM_READINGS = 5;\r\n\r\n  function retrieveData() {\r\n    firebase.database().ref('Users/' + currentUser.googleId).once(\"value\", snapshot => {\r\n      if (snapshot.exists()){\r\n         setAverageDescriptor(snapshot.val().descriptor)\r\n         setName(snapshot.val().name)\r\n         setPhone(snapshot.val().phone)\r\n         setInsta(snapshot.val().insta)\r\n         setSnap(snapshot.val().snap)\r\n      }\r\n   });\r\n\r\n  }\r\n\r\n\r\n  function handleHome() {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  function handleSubmit() {\r\n    saveData()\r\n  }\r\n\r\n  const saveData = () => {\r\n    if (nameRef.current.value === '' || averageDescriptor == null){\r\n      alert(\"Please scan your face and fill in your name.\")\r\n    }\r\n    else{\r\n    firebase.database().ref('Users/' + currentUser.googleId).set({\r\n\t\t\tdescriptor: averageDescriptor,\r\n      name: nameRef.current.value,\r\n      phone: phoneRef.current.value,\r\n      insta: instaRef.current.value,\r\n      snap: snapRef.current.value,\r\n\t\t  },\r\n\t\t  (error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t  } \r\n\t\t  );\r\n      handleHome();\r\n      alert('Successfully saved data!')\r\n    }\r\n  }\r\n\r\n\r\n  const handleCamera = () => {\r\n    setDoneRunning(false)\r\n    setStartedRunning(false)\r\n    setOpenCamera(true)\r\n  }\r\n\r\n  const handleLeaveCamera = () => {\r\n    setOpenCamera(false)\r\n    setStartedRunning(true)\r\n  }\r\n\r\n  const handleRunFaceapi = () => {\r\n    setStartedRunning(true)\r\n    setButtonText(\"Running facial recognition...\")\r\n    runFaceapi()\r\n    \r\n  }\r\n\r\n\r\n  const runFaceapi = async () => {\r\n    await faceapi.loadSsdMobilenetv1Model('/models');\r\n    await faceapi.loadFaceLandmarkModel('/models');\r\n    await faceapi.loadFaceRecognitionModel('/models');\r\n    while (descriptors.length <= NUM_READINGS){\r\n      await detect()\r\n    }\r\n  };\r\n\r\n  const takeAverage = (descriptors) => {\r\n    let averages = []\r\n   \r\n    for(let i = 0; i < 128; i++) {\r\n      let sum = 0;\r\n      let average;\r\n      for(let j = 0; j < descriptors.length; j++) {\r\n        sum += descriptors[j][i];\r\n      }\r\n      average = sum/descriptors.length;\r\n      \r\n      averages.push(average);\r\n    }\r\n\r\n    return averages;\r\n  }\r\n\r\n\r\n  const detect = async () => {\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n\r\n      const detectionWithDescriptors = await faceapi.detectSingleFace(video).withFaceLandmarks().withFaceDescriptor()\r\n      if(detectionWithDescriptors != null){\r\n        descriptors.push(detectionWithDescriptors.descriptor);\r\n        if (descriptors.length >= NUM_READINGS){\r\n          clearInterval(interval);\r\n          setButtonText(\"Run facial recognition\")\r\n          if (descriptors.length == NUM_READINGS){\r\n            let descriptor = takeAverage(descriptors);\r\n            setAverageDescriptor(descriptor)\r\n            setDoneRunning(true)\r\n            setStartedRunning(false)\r\n\r\n          }\r\n\r\n        }\r\n      \r\n      }\r\n     \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveData()\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <IconButton aria-label=\"home\" onClick={() => { handleHome() }}>\r\n        <Home />\r\n      </IconButton>\r\n\r\n      { !startedRunning?\r\n        <IconButton aria-label=\"clear\" onClick={() => { handleLeaveCamera() }}>\r\n        <Clear />\r\n      </IconButton>: null\r\n      }\r\n\r\n      {openCamera?\r\n        <div>\r\n        \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 300,\r\n            height: 300,\r\n          }}\r\n          videoConstraints={{\r\n            ...videoConstraints,\r\n            facingMode\r\n          }}\r\n        />\r\n    {!doneRunning?\r\n      <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={() => handleRunFaceapi() }\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n\r\n      {!startedRunning?\r\n      <IconButton onClick={handleClick}>\r\n        <FlipCameraIos/>\r\n        </IconButton>: null\r\n      }\r\n\r\n      </div>\r\n      \r\n      :\r\n      <div>\r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => handleLeaveCamera() }\r\n          >\r\n            Finish\r\n            </Button>\r\n      </div>\r\n      }\r\n        <p>Hold the phone so that your face takes up the majority of the screen, but no parts of your head is cut off. Make sure you have good lighting and that you are not holding the phone at an angle. When you are ready, click the button above. </p>\r\n        \r\n      </div>\r\n        :\r\n        <form>\r\n          <p>The following inputs will be public to all Harvard College students when they scan your face. Please leave any field for which you do not want to be publicly available blank.</p>\r\n          <Form>\r\n     \r\n                <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              className={classes.button}\r\n              startIcon={<CameraAlt />}\r\n              onClick={() => handleCamera() }\r\n            >\r\n              Open Camera to scan face\r\n            </Button>\r\n\r\n            {\r\n              averageDescriptor ?\r\n              <Check/>:\r\n              <Error/>\r\n            }\r\n\r\n\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control ref={nameRef} defaultValue = {name} placeholder=\"John Harvard\" required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"phone\">\r\n              <Form.Label>Phone number</Form.Label>\r\n              <Form.Control placeholder=\"555-555-5555\" defaultValue = {phone} ref={phoneRef}  />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"insta\">\r\n              <Form.Label>Instagram</Form.Label>\r\n              <Form.Control placeholder=\"username\" defaultValue = {insta} ref={instaRef}  />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"snap\">\r\n              <Form.Label>Snapchat</Form.Label>\r\n              <Form.Control placeholder=\"username\" defaultValue = {snap} ref={snapRef}  />\r\n            </Form.Group>\r\n            \r\n            <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        onClick={() => handleSubmit() }\r\n      >\r\n        Save Profile\r\n      </Button>\r\n          </Form>\r\n          \r\n        </form>\r\n      }\r\n      </header>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser, changeUser } = useAuth()\r\n\r\n \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from 'face-api.js';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport CameraAlt from '@material-ui/icons/CameraAlt';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FlipCameraIos from '@material-ui/icons/FlipCameraIos';\r\n\r\n// document.getElementsByTagName(\"body\")[0].style.backgroundColor = \"black\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#A51C30\",\r\n  },\r\n}));\r\n\r\nfunction HomeScreen() {\r\n\r\n  const FACING_MODE_USER = \"user\";\r\n  const FACING_MODE_ENVIRONMENT = \"environment\";\r\n\r\n  const videoConstraints = {\r\n    facingMode: FACING_MODE_USER\r\n  };\r\n\r\n    const [facingMode, setFacingMode] = React.useState(FACING_MODE_ENVIRONMENT);\r\n\r\n    const handleClick = React.useCallback(() => {\r\n      setFacingMode(\r\n        prevState =>\r\n          prevState === FACING_MODE_USER\r\n            ? FACING_MODE_ENVIRONMENT\r\n            : FACING_MODE_USER\r\n      );\r\n    }, []);\r\n\r\n\r\n  const history = useHistory()\r\n  const { changeUser, currentUser } = useAuth()\r\n  const classes = useStyles();\r\n  const [prediction, setPrediction] = useState(\"Hold the phone so that the person's face takes up the majority of the screen, but no part of their head is off screen. Make sure you have good lighting and that you are not holding the camera at an angle. When you are ready, click the button above.\");\r\n  const [predictionOut, setPredictionOut] = useState(false);\r\n\r\n  const [buttonText, setButtonText] = useState(\"Run facial recognition\")\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [snap, setSnap] = useState(\"\");\r\n  const [insta, setInsta] = useState(\"\");\r\n  const [startedRunning, setStartedRunning] = useState(false)\r\n  const phoneSMS = \"sms:\" + phone;\r\n  const webcamRef = useRef(null);\r\n  const NUM_READINGS = 1;\r\n\r\n  function handleProfile() {\r\n    history.push(\"/profile\")\r\n  }\r\n\r\n  const checkProfileExistence = () => {\r\n    firebase.database().ref('Users/' + currentUser.googleId).once(\"value\", snapshot => {\r\n      if (!snapshot.exists()){\r\n         history.push(\"/profile\")\r\n         alert('Please fill out your profile first!')\r\n      }\r\n   });\r\n  }\r\n\r\n  async function loadModels() {\r\n    await faceapi.loadSsdMobilenetv1Model('/models');\r\n    await faceapi.loadFaceLandmarkModel('/models');\r\n    await faceapi.loadFaceRecognitionModel('/models');\r\n  }\r\n\r\n\r\n  let descriptors = [];\r\n  let averageDescriptor;\r\n  let interval;\r\n\r\n  const handleRunFaceapi = () => {\r\n    setButtonText(\"Running facial recognition...\");\r\n    setStartedRunning(true)\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setSnap(\"\");\r\n    setInsta(\"\");\r\n    setPredictionOut(false);\r\n    runFaceapi()\r\n  }\r\n\r\n  async function logout() {\r\n    await changeUser(null)\r\n    history.push(\"/login\")\r\n  }\r\n\r\n  const runFaceapi = async () => {\r\n    while (descriptors.length <= NUM_READINGS){\r\n      await detect()\r\n    }\r\n  };\r\n\r\n  const takeAverage = (descriptors) => {\r\n    let averages = []\r\n   \r\n    for(let i = 0; i < 128; i++) {\r\n      let sum = 0;\r\n      let average;\r\n      for(let j = 0; j < descriptors.length; j++) {\r\n        sum += descriptors[j][i];\r\n      }\r\n      average = sum/descriptors.length;\r\n      \r\n      averages.push(average);\r\n    }\r\n\r\n    return averages;\r\n  }\r\n\r\n  const detect = async () => {\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n\r\n      const detectionWithDescriptors = await faceapi.detectSingleFace(video).withFaceLandmarks().withFaceDescriptor()\r\n      if(detectionWithDescriptors != null){\r\n        descriptors.push(detectionWithDescriptors.descriptor);\r\n        console.log('hi')\r\n        if (descriptors.length >= NUM_READINGS){\r\n          clearInterval(interval);\r\n          // setOpenCamera(false)\r\n          setButtonText(\"Run facial recognition\")\r\n          if (descriptors.length == NUM_READINGS){\r\n            setPrediction(\"Processing results...\\nIf no results appear within 10 seconds, this means that the scanned face does not match any face in our database.\")\r\n            averageDescriptor = takeAverage(descriptors);\r\n            compareFaces();\r\n            setStartedRunning(false)\r\n          }\r\n\r\n        }\r\n      \r\n      }\r\n     \r\n    }\r\n  };\r\n\r\n  const compareFaces = () => {\r\n    let closest = 1\r\n    firebase.database().ref('Users').on('child_added', (snapshot) => {\r\n      let user = snapshot.val()\r\n      let distance = faceapi.euclideanDistance(user.descriptor, averageDescriptor)\r\n      console.log(distance)\r\n      if (distance < closest && distance < 0.5){\r\n        closest = distance\r\n        setPredictionOut(true)\r\n        setName(user.name)\r\n        setPhone(user.phone)\r\n        setSnap(user.snap)\r\n        setInsta(user.insta)\r\n        setPrediction('')\r\n      }\r\n    })\t\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkProfileExistence()\r\n    loadModels()\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\" style={{textAlign: 'center', /*backgroundColor: \"black\", color: \"white\" */}}>\r\n      <header className=\"App-header\">\r\n\r\n      <GoogleLogout\r\n        clientId=\"686023333837-p65ka8pm804ual7o284tholp22pll81s.apps.googleusercontent.com\"\r\n        buttonText=\"Logout\"\r\n        onLogoutSuccess={logout}\r\n      >\r\n      </GoogleLogout>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<AccountCircle />}\r\n        onClick={() => handleProfile() }\r\n      >\r\n        Edit Profile\r\n      </Button>\r\n\r\n      <div>\r\n          <Webcam\r\n            ref={webcamRef}\r\n            style={{\r\n              // position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 0,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              zindex: 9,\r\n              width: 300,\r\n              height: 300,\r\n            }}\r\n            videoConstraints={{\r\n              ...videoConstraints,\r\n              facingMode\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={() => handleRunFaceapi() }\r\n            >\r\n            {buttonText}\r\n          </Button>\r\n          {!startedRunning?\r\n      <IconButton onClick={handleClick}>\r\n        <FlipCameraIos/>\r\n        </IconButton>: null\r\n      }\r\n\r\n      </div>\r\n      <hr/>\r\n      <p>{prediction}</p>\r\n      {predictionOut?\r\n        <div style={{border: \"2px solid black\", backgroundColor: \"lightgray\", paddingTop: \"10px\"}}>\r\n          <p>{\"Name: \" + name}</p>\r\n          <p>Phone number: <a href={phoneSMS}>{phone}</a></p>\r\n          <p>{\"Snapchat: \" + snap}</p>\r\n          <p>{\"Instagram: \" + insta}</p>\r\n        </div>\r\n        : null\r\n      }\r\n      <br/>\r\n      </header>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default HomeScreen;","import React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport LoginScreen from \"./Login\"\r\nimport ProfileScreen from \"./screens/Profile.Screen\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport HomeScreen from \"./screens/Home.Screen\"\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={HomeScreen} />\r\n              <PrivateRoute path=\"/profile\" component={ProfileScreen} />\r\n              <Route path=\"/login\" component={LoginScreen} />\r\n\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}